{"version":3,"sources":["assets/Play.svg","assets/Pause.svg","assets/circulo.svg","components/Todo.jsx","components/Pomodoro.jsx","App.js","index.js"],"names":["TaskInput","props","isFocusedState","isFocused","setIsFocused","className","onSubmit","addTask","type","placeholder","onFocus","onBlur","Task","task","isCompleted","isNew","onClick","toggleCompletedTask","src","Circle","alt","setActiveTask","title","removeTask","id","ActiveTask","style","display","marginTop","justifyContent","alignItems","compareByBooleans","a","b","Todo","tasks","useState","modifyTask","sort","map","Pomodoro","sessionDurations","workDuration","time","setTime","isStarted","setIsStarted","sessionType","setSessionType","useEffect","interval","setInterval","setTimeout","breakDuration","clearInterval","minutes","Math","floor","seconds","computeTime","Pause","Play","Object","keys","activeTask","length","App","setTasks","selectedTask","event","preventDefault","taskInput","target","value","uuidv4","filteredTasks","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c867c0dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Play.7a872126.svg\";","export default __webpack_public_path__ + \"static/media/Pause.55c6dfae.svg\";","export default __webpack_public_path__ + \"static/media/circulo.1de6b56a.svg\";","import React, { useState } from \"react\";\nimport Circle from \"../assets/circulo.svg\";\n\nfunction Todo(props) {\n  const tasks = props.tasks;\n  const [isFocused, setIsFocused] = useState(false);\n  const { addTask, removeTask, toggleCompletedTask } = props.modifyTask;\n\n  return (\n    <>\n      <div className=\"Todo\">\n        <h2 className=\"todo-header\">To-Do</h2>\n        <ul className=\"todo-list\">\n          <li className=\"task\">\n            <TaskInput\n              addTask={addTask}\n              isFocusedState={[isFocused, setIsFocused]}\n            />\n          </li>\n          {tasks.sort(compareByBooleans).map((task) => {\n            return (\n              <li key={task.id} className=\"task\">\n                <Task\n                  task={task}\n                  toggleCompletedTask={toggleCompletedTask}\n                  setActiveTask={props.setActiveTask}\n                  removeTask={removeTask}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <span className=\"credits right-credits no-select\">Sebastian Pardo</span>\n    </>\n  );\n}\n\nconst TaskInput = (props) => {\n  const [isFocused, setIsFocused] = props.isFocusedState;\n  return (\n    <form className=\"todo-form\" onSubmit={props.addTask}>\n      <span\n        className={`circle-size center-flex ${\n          isFocused\n            ? \"material-icons-round add-icon\"\n            : \"material-icons-outlined circle-icon\"\n        }`}\n      >\n        {isFocused ? \"add\" : \"fiber_manual_record\"}\n      </span>\n      <input\n        type=\"text\"\n        className=\"task-input no-border\"\n        placeholder=\"Add Task\"\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => setIsFocused(false)}\n      />\n    </form>\n  );\n};\n\nexport const Task = (props) => {\n  const task = props.task;\n  return (\n    <>\n      <picture\n        className={`circle-size ${\n          task.isCompleted ? \"task-done\" : task.isNew ? \"\" : \"task-not-done\"\n        }`}\n      >\n        <img\n          className=\"pointer no-select\"\n          onClick={() => props.toggleCompletedTask(task)}\n          src={Circle}\n          alt=\"Circle\"\n        />\n      </picture>\n      <p\n        key={task.title + task.isCompleted}\n        className={`task-title ${\n          task.isCompleted\n            ? \" task-title-done\"\n            : task.isNew\n            ? \"\"\n            : \"task-title-not-done\"\n        }`}\n        onClick={() => {\n          if (!task.isCompleted) {\n            props.setActiveTask(task);\n          }\n        }}\n      >\n        {task.title}\n      </p>\n      <span\n        className=\"material-icons-outlined pointer no-select trash-icon\"\n        onClick={() => props.removeTask(task.id)}\n      >\n        delete\n      </span>\n    </>\n  );\n};\n\nexport const ActiveTask = (props) => {\n  const task = props.task;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        marginTop: 30,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <picture\n        className={`circle-size ${\n          task.isCompleted ? \"task-done\" : task.isNew ? \"\" : \"task-not-done\"\n        }`}\n      >\n        <img\n          className=\"pointer no-select\"\n          onClick={() => props.toggleCompletedTask(task)}\n          src={Circle}\n          alt=\"Circle\"\n        />\n      </picture>\n      <p className={`task-title${task.isCompleted ? \" task-title-done\" : \"\"}`}>\n        {task.title}\n      </p>\n    </div>\n  );\n};\n\nconst compareByBooleans = (a, b) => {\n  return a.isCompleted === b.isCompleted ? 0 : a.isCompleted ? 1 : -1;\n};\n\nexport default Todo;\n","import React, { useEffect, useState } from \"react\";\nimport Play from \"../assets/Play.svg\";\nimport Pause from \"../assets/Pause.svg\";\nimport { ActiveTask } from \"./Todo\";\n\nfunction Pomodoro(props) {\n  const [time, setTime] = useState(sessionDurations.workDuration);\n  const [isStarted, setIsStarted] = useState(false);\n  const [sessionType, setSessionType] = useState(\"work\");\n\n  const computeTime = (time) => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    return minutes + \":\" + seconds;\n  };\n\n  useEffect(() => {\n    if (isStarted) {\n      let interval = setInterval(() => setTime(time - 1), 1000);\n      if (time === 0) {\n        setIsStarted(false);\n        setTimeout(() => {\n          if (sessionType === \"work\") {\n            setSessionType(\"break\");\n            setTime(sessionDurations.breakDuration);\n          } else {\n            setSessionType(\"work\");\n            setTime(sessionDurations.workDuration);\n          }\n        }, 1000);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [isStarted, sessionType, time]);\n\n  return (\n    <>\n      <div className=\"Pomodoro\">\n        <h2 className=\"pomodoro-header\">Pomodoro</h2>\n        {/* <h3>{sessionType}</h3> */}\n        <p className=\"time-left\">{computeTime(time)}</p>\n        <div className=\"controls center-flex\">\n          {isStarted ? (\n            <img\n              src={Pause}\n              alt=\"pause button\"\n              className=\"pointer no-select control\"\n              key=\"pause\"\n              onClick={() => setIsStarted(false)}\n            />\n          ) : (\n            <img\n              src={Play}\n              alt=\"play button\"\n              className=\"pointer no-select control\"\n              key=\"play\"\n              onClick={() => setIsStarted(true)}\n            />\n          )}\n        </div>\n        {Object.keys(props.activeTask).length !== 0 &&\n          !props.activeTask.isCompleted && (\n            <ActiveTask\n              task={props.activeTask}\n              toggleCompletedTask={props.toggleCompletedTask}\n            />\n          )}\n      </div>\n      <span className=\"credits left-credits no-select\">Designed by</span>\n    </>\n  );\n}\n\nexport default Pomodoro;\n\nconst sessionDurations = {\n  workDuration: 1500,\n  breakDuration: 300,\n};\n","import { useState } from \"react\";\nimport Pomodoro from \"./components/Pomodoro\";\nimport Todo from \"./components/Todo\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [activeTask, setActiveTask] = useState({});\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = (event) => {\n    event.preventDefault();\n    let taskInput = event.target[0].value;\n    if (taskInput.length === 0) return;\n    event.target[0].value = \"\";\n    let task = {\n      id: uuidv4(),\n      title: taskInput,\n      isCompleted: false,\n      isNew: true,\n    };\n    setTasks([task, ...tasks]);\n  };\n\n  const removeTask = (id) => {\n    let filteredTasks = tasks.filter((task) => task.id !== id);\n    setTasks(filteredTasks);\n    if (activeTask.id === id) {\n      setActiveTask({});\n    }\n  };\n\n  const toggleCompletedTask = (selectedTask) => {\n    selectedTask.isCompleted = !selectedTask.isCompleted;\n    selectedTask.isNew = false;\n    setTasks(\n      tasks.map((task) => {\n        return task.id === selectedTask.id ? selectedTask : task;\n      })\n    );\n  };\n\n  return (\n    <>\n      <div className=\"background\"></div>\n      <div className=\"App\">\n        <div className=\"left\">\n          <Pomodoro\n            activeTask={activeTask}\n            toggleCompletedTask={toggleCompletedTask}\n          />\n        </div>\n        <div className=\"right\">\n          <Todo\n            setActiveTask={setActiveTask}\n            tasks={tasks}\n            modifyTask={{\n              addTask: addTask,\n              removeTask: removeTask,\n              toggleCompletedTask: toggleCompletedTask,\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}